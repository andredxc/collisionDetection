[DEFAULT]

debug = False

# Name of the gdb executable, usualy is "gdb-mic" for Xeon Phi
gdbExecName = gdb

# How many interrupt signals to send sequentially
seqSignals = 10
# How many random threads will attempt to send interrupt signals
numThreadsFI = 3

# Max time to send signal. It should be the app exec time in seconds
maxWaitTime = 30

# Commands to set the session inside GDB environment
gdbInitStrings = file /home/andre/github/collisionDetection/duplicated/collisionDetection_duplicated;set args /home/andre/github/collisionDetection/duplicated/outputFile

goldFile = /home/andre/github/collisionDetection/duplicated/gold
outputFile = /home/andre/github/collisionDetection/duplicated/outputFile

# Shell command to send SIGINT to the application being tested
signalCmd = killall -2 collisionDetection_duplicated

# Kill commands to exit all applications (GDB and the application tested)
# Need to ensure safe termination before another fault injection test
killStrs = killall -9 gdb;killall -9 collisionDetection_duplicated

# Start and end time to try randomly inject a fault
[collisionDetection-random]
initSignal = 0
endSignal = 20
# Which fault model to use, 0 -> single; 1 -> double; 2 -> random; 3 -> zeros; 4 -> least significant bits (LSB)
faultModel = 2
